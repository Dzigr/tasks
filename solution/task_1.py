from typing import List


def verify_data(template: str, keys: List[str]) -> str:
    if template.count("{") != template.count("}"):
        return "–û—à–∏–±–∫–∞: –Ω–µ–ø–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫"
    for key in keys:
        if "{" + key + "}" not in template:
            return f"–û—à–∏–±–∫–∞: –∫–ª—é—á {key} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ"

    return template


def test_verify_data_missing_key():
    template = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
    ‚åöÔ∏è {day_month} –≤ {start_time}
    üë© {Master}
    –£—Å–ª—É–≥–∏:
    {services}
    —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''
    keys = ['name', 'day_month', 'start_time', 'master', 'services']
    expected_error = "–û—à–∏–±–∫–∞: –∫–ª—é—á master –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ"
    assert verify_data(template, keys) == expected_error


def test_verify_data_mismatched_brackets():
    template = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
    ‚åöÔ∏è {day_month} –≤ {start_time}
    üë© {master}
    –£—Å–ª—É–≥–∏:
    {services
    —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''
    keys = ['name', 'day_month', 'day_of_week', 'start_time', 'master', 'services']
    expected_error = "–û—à–∏–±–∫–∞: –Ω–µ–ø–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫"
    assert verify_data(template, keys) == expected_error
